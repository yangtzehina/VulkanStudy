#version 450


layout(local_size_x = 16, local_size_y = 16) in;
layout(binding = 0, rgba8) uniform image2D resultImage;


layout(push_constant) uniform shaderInformation
{
  float iTime;
}
pushc;

const float M_PI   = 3.14159265359;
const vec2  center = vec2(0.5, 0.3);

void main()
{
  uvec2 iResolution = gl_NumWorkGroups.xy * gl_WorkGroupSize.xy;
  float iTime       = pushc.iTime;
  vec2  fragCoord   = vec2(gl_GlobalInvocationID);
  vec4  fragColor   = vec4(0);

  
  // Center
  vec2 uv  = fragCoord / vec2(iResolution.xy);
  uv -= center;
  uv *= 5.0;

  float d = abs(fract(dot(uv, uv) - iTime * 0.5) - 0.5) + 0.3;
  float a = abs(fract(atan(uv.x, uv.y) / (M_PI * 1.75) * 3.) - 0.5) + 0.2;

  vec3 col = vec4(abs(uv), 0.5 + 0.5 * sin(iTime), 1.0).xyz;

  if(a < d)
  {
    fragColor = vec4(d * col.gbr, 1.0);
  }
  else
  {
    fragColor = vec4(a * col, 1.0);
  }

  imageStore(resultImage, ivec2(gl_GlobalInvocationID.xy), fragColor);
}
